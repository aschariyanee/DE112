# -*- coding: utf-8 -*-
"""cause of death around the world

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AavFkTAqpgqEDovqqfkU3GDQbpxGT1Bt

# Import Module
"""

from google.colab import drive
drive.mount('/content/gdrive')

# Commented out IPython magic to ensure Python compatibility.
import csv
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import heapq
# %matplotlib inline

f = pd.read_csv('/content/gdrive/MyDrive/death.csv')
f

f.info()

f.head(195)

"""# Asia"""

# filtering continents
# Asia
AS = f[f['Continent']=='Asia']
AS

# filtering columns
as_death = AS[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies',
               'Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
as_death

# searching and storing
as_men = as_death.Meningitis
as_dem = as_death.Dementia
as_par = as_death.Parkinsons_disease
as_nut = as_death.Nutritional_deficiencies
as_mal = as_death.Malaria
as_dro = as_death.Drowning
as_hom = as_death.Homicide
as_mat = as_death.Maternal_disorders
as_hiv = as_death.HIV_or_AIDS
as_car = as_death.Cardiovascular_diseases

# calculating
as_death_list = []

men = 0
for a in as_men:
  men += a
as_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in as_dem:
  dem += b
as_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in as_par:
  par += c
as_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in as_nut:
  nut += d
as_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in as_mal:
  mal += e
as_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in as_dro:
  dro += f
as_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in as_hom:
  hom += h
as_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in as_mat:
  mat += i
as_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in as_hiv:
  hiv += j
as_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in as_car:
  car += k
as_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',as_death_list)

# finding top 3
top = heapq.nlargest(3,as_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in Asia => Parkinsons disease :',top3)
print('The second-most cause of death in Asia => Dementia :',top2)
print('The most cause of death in Asia => Cardiovascular diseases :',top1)

"""# -----Asia Graph"""

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_as_death = ['Parkinsons disease','Dementia','Cardiovascular diseases']
counts = [185916,798963,10760348]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_as_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in Asia')

plt.show()

"""# Africa"""

# filtering continents
# Africa
AF = f[f['Continent']=='Africa']
AF

# filtering columns
af_death = AF[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
af_death

# searching and storing
af_men = af_death.Meningitis
af_dem = af_death.Dementia
af_par = af_death.Parkinsons_disease
af_nut = af_death.Nutritional_deficiencies
af_mal = af_death.Malaria
af_dro = af_death.Drowning
af_hom = af_death.Homicide
af_mat = af_death.Maternal_disorders
af_hiv = af_death.HIV_or_AIDS
af_car = af_death.Cardiovascular_diseases

# calculating
af_death_list = []

men = 0
for a in af_men:
  men += a
af_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in af_dem:
  dem += b
af_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in af_par:
  par += c
af_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in af_nut:
  nut += d
af_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in af_mal:
  mal += e
af_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in af_dro:
  dro += f
af_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in af_hom:
  hom += h
af_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in af_mat:
  mat += i
af_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in af_hiv:
  hiv += j
af_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in af_car:
  car += k
af_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',af_death_list)

# finding top 3
top = heapq.nlargest(3,af_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in Africa => Malaria :',top3)
print('The second-most cause of death in Africa => HIV or AIDS :',top2)
print('The most cause of death in Africa => Cardiovascular diseases :',top1)

"""# -----Africa Graph"""

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_af_death = ['Malaria','HIV or AIDS','Cardiovascular diseases']
counts = [585135,635357,1585994]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_af_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in Africa')

plt.show()

"""# North America"""

# filtering continents
# North America
NA = f[f['Continent']=='North America']
NA

# filtering columns
na_death = NA[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
na_death

# searching and storing
na_men = na_death.Meningitis
na_dem = na_death.Dementia
na_par = na_death.Parkinsons_disease
na_nut = na_death.Nutritional_deficiencies
na_mal = na_death.Malaria
na_dro = na_death.Drowning
na_hom = na_death.Homicide
na_mat = na_death.Maternal_disorders
na_hiv = na_death.HIV_or_AIDS
na_car = na_death.Cardiovascular_diseases

# calculating
na_death_list = []

men = 0
for a in na_men:
  men += a
na_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in na_dem:
  dem += b
na_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in na_par:
  par += c
na_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in na_nut:
  nut += d
na_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in na_mal:
  mal += e
na_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in na_dro:
  dro += f
na_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in na_hom:
  hom += h
na_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in na_mat:
  mat += i
na_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in na_hiv:
  hiv += j
na_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in na_car:
  car += k
na_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',na_death_list)

# finding top 3
top = heapq.nlargest(3,na_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in North America => Homicide :',top3)
print('The second-most cause of death in North America => Dementia :',top2)
print('The most cause of death in North America => Cardiovascular diseases :',top1)

"""# -----North America Graph"""

from matplotlib.ticker import ScalarFormatter, FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_na_death = ['Homicide','Dementia','Cardiovascular diseases']
counts = [70034,200387,1372131]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_na_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in North America')

plt.show()

"""# South America"""

# filtering continents
# South America
SA = f[f['Continent']=='South America']
SA

# filtering columns
sa_death = SA[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
sa_death

# searching and storing
sa_men = sa_death.Meningitis
sa_dem = sa_death.Dementia
sa_par = sa_death.Parkinsons_disease
sa_nut = sa_death.Nutritional_deficiencies
sa_mal = sa_death.Malaria
sa_dro = sa_death.Drowning
sa_hom = sa_death.Homicide
sa_mat = sa_death.Maternal_disorders
sa_hiv = sa_death.HIV_or_AIDS
sa_car = sa_death.Cardiovascular_diseases

# calculating
sa_death_list = []

men = 0
for a in sa_men:
  men += a
sa_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in sa_dem:
  dem += b
sa_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in sa_par:
  par += c
sa_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in sa_nut:
  nut += d
sa_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in sa_mal:
  mal += e
sa_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in sa_dro:
  dro += f
sa_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in sa_hom:
  hom += h
sa_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in sa_mat:
  mat += i
sa_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in sa_hiv:
  hiv += j
sa_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in sa_car:
  car += k
sa_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',sa_death_list)

# finding top 3
top = heapq.nlargest(3,sa_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in South America => Homicide :',top3)
print('The second-most cause of death in South America => Dementia :',top2)
print('The most cause of death in South America => Cardiovascular diseases :',top1)

"""# -----South America Graph"""

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_sa_death = ['Homicide','Dementia','Cardiovascular diseases']
counts = [102829,105884,758340]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_sa_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in South America')

plt.show()

"""# Europe"""

# filtering continents
# Europe
EU = f[f['Continent']=='Europe']
EU

# filtering columns
eu_death = EU[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
eu_death

# searching and storing
eu_men = eu_death.Meningitis
eu_dem = eu_death.Dementia
eu_par = eu_death.Parkinsons_disease
eu_nut = eu_death.Nutritional_deficiencies
eu_mal = eu_death.Malaria
eu_dro = eu_death.Drowning
eu_hom = eu_death.Homicide
eu_mat = eu_death.Maternal_disorders
eu_hiv = eu_death.HIV_or_AIDS
eu_car = eu_death.Cardiovascular_diseases

# calculating
eu_death_list = []

men = 0
for a in eu_men:
  men += a
eu_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in eu_dem:
  dem += b
eu_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in eu_par:
  par += c
eu_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in eu_nut:
  nut += d
eu_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in eu_mal:
  mal += e
eu_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in eu_dro:
  dro += f
eu_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in eu_hom:
  hom += h
eu_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in eu_mat:
  mat += i
eu_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in eu_hiv:
  hiv += j
eu_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in eu_car:
  car += k
eu_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',eu_death_list)

# finding top 3
top = heapq.nlargest(3,eu_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in Europe => Parkinsons disease :',top3)
print('The second-most cause of death in Europe => Dementia :',top2)
print('The most cause of death in Europe => Cardiovascular diseases :',top1)

"""# -----Europe Graph"""

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_eu_death = ['Homicide','Dementia','Cardiovascular diseases']
counts = [63529,301743,2535584]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_eu_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in Europe')

plt.show()

"""# Australia & Oceania"""

# filtering continents
# Australia & Oceania
OC = f[f['Continent']=='Australia & Oceania']
OC

# filtering columns
oc_death = OC[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
oc_death

# searching and storing
oc_men = oc_death.Meningitis
oc_dem = oc_death.Dementia
oc_par = oc_death.Parkinsons_disease
oc_nut = oc_death.Nutritional_deficiencies
oc_mal = oc_death.Malaria
oc_dro = oc_death.Drowning
oc_hom = oc_death.Homicide
oc_mat = oc_death.Maternal_disorders
oc_hiv = oc_death.HIV_or_AIDS
oc_car = oc_death.Cardiovascular_diseases

# calculating
oc_death_list = []

men = 0
for a in oc_men:
  men += a
oc_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in oc_dem:
  dem += b
oc_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in oc_par:
  par += c
oc_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in oc_nut:
  nut += d
oc_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in oc_mal:
  mal += e
oc_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in oc_dro:
  dro += f
oc_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in oc_hom:
  hom += h
oc_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in oc_mat:
  mat += i
oc_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in oc_hiv:
  hiv += j
oc_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in oc_car:
  car += k
oc_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',oc_death_list)

# finding top 3
top = heapq.nlargest(3,oc_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in Australia & Oceania => HIV or AIDS :',top3)
print('The second-most cause of death in Australia & Oceania => Dementia :',top2)
print('The most cause of death in Australia & Oceania => Cardiovascular diseases :',top1)

"""# -----Australia & Oceania Graph"""

from matplotlib.ticker import ScalarFormatter, FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_oc_death = ['HIV or AIDS','Dementia','Cardiovascular diseases']
counts = [4049,13891,86582]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_oc_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in Australia & Oceania')

plt.show()

"""# Europe and Asia"""

# filtering continents
# Europe and Asia
EU_AS = f[f['Continent']=='Europe and Asia']
EU_AS

# filtering columns
eu_as_death = EU_AS[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
eu_as_death

# searching and storing
eu_as_men = eu_as_death.Meningitis
eu_as_dem = eu_as_death.Dementia
eu_as_par = eu_as_death.Parkinsons_disease
eu_as_nut = eu_as_death.Nutritional_deficiencies
eu_as_mal = eu_as_death.Malaria
eu_as_dro = eu_as_death.Drowning
eu_as_hom = eu_as_death.Homicide
eu_as_mat = eu_as_death.Maternal_disorders
eu_as_hiv = eu_as_death.HIV_or_AIDS
eu_as_car = eu_as_death.Cardiovascular_diseases

# calculating
eu_as_death_list = []

men = 0
for a in eu_as_men:
  men += a
eu_as_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in eu_as_dem:
  dem += b
eu_as_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in eu_as_par:
  par += c
eu_as_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in eu_as_nut:
  nut += d
eu_as_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in eu_as_mal:
  mal += e
eu_as_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in eu_as_dro:
  dro += f
eu_as_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in eu_as_hom:
  hom += h
eu_as_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in eu_as_mat:
  mat += i
eu_as_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in eu_as_hiv:
  hiv += j
eu_as_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in eu_as_car:
  car += k
eu_as_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',eu_as_death_list)

# finding top 3
top = heapq.nlargest(3,eu_as_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in Europe and Asia => Homicide :',top3)
print('The second-most cause of death in Europe and Asia => Dementia :',top2)
print('The most cause of death in Europe and Asia => Cardiovascular diseases :',top1)

"""# -----Europe and Asia Graph"""

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_eu_as_death = ['Homicide','Dementia','Cardiovascular diseases']
counts = [24015,69879,1211303]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_eu_as_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in Europe and Asia')

plt.show()

"""# Europe and Africa"""

# filtering continents
# Europe and Africa
EU_AF = f[f['Continent']=='Europe and Africa']
EU_AF

# filtering columns
eu_af_death = EU_AF[['Continent','Meningitis','Dementia','Parkinsons_disease','Nutritional_deficiencies','Malaria','Drowning','Homicide','Maternal_disorders','HIV_or_AIDS','Cardiovascular_diseases']]
eu_af_death

# searching and storing
eu_af_men = eu_af_death.Meningitis
eu_af_dem = eu_af_death.Dementia
eu_af_par = eu_af_death.Parkinsons_disease
eu_af_nut = eu_af_death.Nutritional_deficiencies
eu_af_mal = eu_af_death.Malaria
eu_af_dro = eu_af_death.Drowning
eu_af_hom = eu_af_death.Homicide
eu_af_mat = eu_af_death.Maternal_disorders
eu_af_hiv = eu_af_death.HIV_or_AIDS
eu_af_car = eu_af_death.Cardiovascular_diseases

# calculating
eu_af_death_list = []

men = 0
for a in eu_af_men:
  men += a
eu_af_death_list.append(men)
print('Meningitis :',men)

dem = 0
for b in eu_af_dem:
  dem += b
eu_af_death_list.append(dem)
print('Dementia :',dem)

par = 0
for c in eu_af_par:
  par += c
eu_af_death_list.append(par)
print('Parkinsons disease :',par)

nut = 0
for d in eu_af_nut:
  nut += d
eu_af_death_list.append(nut)
print('Nutritional deficiencies :',nut)

mal = 0
for e in eu_af_mal:
  mal += e
eu_af_death_list.append(mal)
print('Malaria :',mal)

dro = 0
for f in eu_af_dro:
  dro += f
eu_af_death_list.append(dro)
print('Drowning :',dro)

hom = 0
for h in eu_af_hom:
  hom += h
eu_af_death_list.append(hom)
print('Homicide :',hom)

mat = 0
for i in eu_af_mat:
  mat += i
eu_af_death_list.append(mat)
print('Maternal disorders :',mat)

hiv = 0
for j in eu_af_hiv:
  hiv += j
eu_af_death_list.append(hiv)
print('HIV or AIDS :',hiv)

car = 0
for k in eu_af_car:
  car += k
eu_af_death_list.append(car)
print('Cardiovascular diseases :',car)

print('death list =',eu_af_death_list)

# finding top 3
top = heapq.nlargest(3,eu_af_death_list)
top1 = (top[0])
top2 = (top[1])
top3 = (top[2])

print('The third-most cause of death in Europe and Africa => Parkinsons disease :',top3)
print('The second-most cause of death in Europe and Africa => Dementia :',top2)
print('The most cause of death in Europe and Africa => Cardiovascular diseases :',top1)

"""# -----Europe and Africa Graph"""

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

top_eu_af_death = ['Parkinsons disease','Dementia','Cardiovascular diseases']
counts = [7464,35810,168846]
bar_labels = ['blue','green','red']
bar_colors = ['tab:blue','tab:green','tab:red']

ax.bar(top_eu_af_death,counts,label=bar_labels,color=bar_colors)

ax.set_ylabel('mortality rate')
ax.set_xlabel('cause of death')
ax.set_title('Top 3 Cause of Death in Europe and Africa')

plt.show()

"""# Summary and Graph"""

all_car_list = [as_death_list[9],af_death_list[9],
                na_death_list[9],sa_death_list[9],
                eu_death_list[9],oc_death_list[9],
                eu_as_death_list[9],eu_af_death_list[9]]
all_car_list

max_car = max(all_car_list)
min_car = min(all_car_list)
print(max_car) # Asia
print(min_car) # Australia & Oceania

from matplotlib.ticker import ScalarFormatter,FormatStrFormatter

fig,ax = plt.subplots()
ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

fig.set_figheight(5)
fig.set_figwidth(25)

continents = ['Asia','Africa',
              'North America','South America',
              'Europe','Australia & Oceania',
              'Europe and Asia','Europe and Africa']
counts = all_car_list
bar_labels = ['red']
bar_colors = ['tab:red']

ax.bar(continents,counts,label=bar_labels, color=bar_colors)

ax.set_ylabel('cardiovascular diseases mortality rate')
ax.set_xlabel('continent')
ax.set_title('Comparing Highest Mortality Rate in Every Continents')

plt.show()